- make tables expandable
- filtering / sorting controls
- navigation (links at top?)
- figure out what to do with rows having major parsing errors (no fromto)
  - probably don't show them, unless in some kind of debugging/development mode
- maybe merge the RMs and RM search views?
- return more semantic error codes for certain error conditions in backend
  - e.g. 404 if we get a user lookup for a username that's not in the db?
- for a failed user lookup, show user lookup search bar
- filtering controls for user view (closer/commenter/nominator)

API design to support user view. Would like to have following information:
- n each of noms/closes/votes
- polcounts
- selection of involved RMs (sorted by recency)
    - and possibly filterable to just noms/closes/votes
So, do we want to bundle all of that into one API call? Or split it out?
Seems like at least the last one should be separate (so we can fetch more rows, or change
the sorting/filtering without having to reload all the other data on the page)


== Column display stuff ==
- niceify date display
- replace None with ? for to_title
- add "(and x more)" to RM col for multimoves
- clean up outcome col
  - normalize case
  - maybe linkify page names?
  - remove [[link]] markup
- color-code !Vote column in user view to show close/nom?
  - ooh, color code support/oppose !votes and moved/not moved cells
    in matching color scheme, to easy see rough agreement/disagreement.

== CSS ==
- general table formatting stuff
  - visible borders?
  - margin/padding btwn cols
  - orientation/size of text. Allowing long text to flow over multiple lines.

== Views ==
RMs:
x big RMs / recent RMs
x user lookup
  - !vote
x RM search
x policy lookup
  - n mentions
Columns for all:
* RM
* Date
* outcome
* (maybe) size
Optional columns for all?:
* policy mentions
* all size cols (participants, comments, bytes)
* nominator
* closer
* n_relists


Users:
x top users
Policies:
x top policies
  - also maybe this could be a subview of the user lookup view?!
Other:
- 'home'
- about

== Backend ==
- filter/sort kwargs
- sqlite backend?

== Wild ideas ==
- have pages for individual RMs? Would give space to show more detailed stats, esp:
  - all votes cast
  - all policies cited 
  - all involved pages, in case of a multimove
- turn the activity stats (noms/closes/comments) in user view into a little bar graph
  - and maybe some kind of viz for polcounts too
